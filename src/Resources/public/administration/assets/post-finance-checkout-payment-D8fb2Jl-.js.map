{"version":3,"file":"post-finance-checkout-payment-D8fb2Jl-.js","sources":["../../../app/administration/src/module/postfinancecheckout-order/extension/sw-order/sw-order.html.twig","../../../app/administration/src/module/postfinancecheckout-order/extension/sw-order/index.js","../../../app/administration/src/module/postfinancecheckout-order/component/postfinancecheckout-order-action-completion/index.html.twig","../../../app/administration/src/module/postfinancecheckout-order/component/postfinancecheckout-order-action-completion/index.js","../../../app/administration/src/module/postfinancecheckout-order/component/postfinancecheckout-order-action-refund/index.html.twig","../../../app/administration/src/module/postfinancecheckout-order/component/postfinancecheckout-order-action-refund/index.js","../../../app/administration/src/module/postfinancecheckout-order/component/postfinancecheckout-order-action-refund-partial/index.html.twig","../../../app/administration/src/module/postfinancecheckout-order/component/postfinancecheckout-order-action-refund-partial/index.js","../../../app/administration/src/module/postfinancecheckout-order/component/postfinancecheckout-order-action-refund-by-amount/index.html.twig","../../../app/administration/src/module/postfinancecheckout-order/component/postfinancecheckout-order-action-refund-by-amount/index.js","../../../app/administration/src/module/postfinancecheckout-order/component/postfinancecheckout-order-action-void/index.html.twig","../../../app/administration/src/module/postfinancecheckout-order/component/postfinancecheckout-order-action-void/index.js","../../../app/administration/src/module/postfinancecheckout-order/page/postfinancecheckout-order-detail/index.html.twig","../../../app/administration/src/module/postfinancecheckout-order/page/postfinancecheckout-order-detail/index.js","../../../app/administration/src/module/postfinancecheckout-order/index.js","../../../app/administration/src/module/postfinancecheckout-settings/acl/index.js","../../../app/administration/src/module/postfinancecheckout-settings/page/postfinancecheckout-settings/index.html.twig","../../../app/administration/src/module/postfinancecheckout-settings/page/postfinancecheckout-settings/configuration-constants.js","../../../app/administration/src/module/postfinancecheckout-settings/page/postfinancecheckout-settings/index.js","../../../app/administration/src/module/postfinancecheckout-settings/component/sw-postfinancecheckout-credentials/index.html.twig","../../../app/administration/src/module/postfinancecheckout-settings/component/sw-postfinancecheckout-credentials/index.js","../../../app/administration/src/module/postfinancecheckout-settings/component/sw-postfinancecheckout-options/index.html.twig","../../../app/administration/src/module/postfinancecheckout-settings/component/sw-postfinancecheckout-options/index.js","../../../app/administration/src/module/postfinancecheckout-settings/component/sw-postfinancecheckout-settings-icon/index.html.twig","../../../app/administration/src/module/postfinancecheckout-settings/component/sw-postfinancecheckout-settings-icon/index.js","../../../app/administration/src/module/postfinancecheckout-settings/component/sw-postfinancecheckout-storefront-options/index.html.twig","../../../app/administration/src/module/postfinancecheckout-settings/component/sw-postfinancecheckout-storefront-options/index.js","../../../app/administration/src/module/postfinancecheckout-settings/component/sw-postfinancecheckout-advanced-options/index.html.twig","../../../app/administration/src/module/postfinancecheckout-settings/component/sw-postfinancecheckout-advanced-options/index.js","../../../app/administration/src/module/postfinancecheckout-settings/index.js","../../../app/administration/src/core/service/api/postfinancecheckout-configuration.service.js","../../../app/administration/src/core/service/api/postfinancecheckout-refund.service.js","../../../app/administration/src/core/service/api/postfinancecheckout-transaction.service.js","../../../app/administration/src/core/service/api/postfinancecheckout-transaction-completion.service.js","../../../app/administration/src/core/service/api/postfinancecheckout-transaction-void.service.js","../../../app/administration/src/init/api-service.init.js"],"sourcesContent":["{% block sw_order_detail_content_tabs_general %}\n    {% parent %}\n\n{# sw-tabs-item will dissappear. See: https://github.com/shopware/shopware/blob/trunk/UPGRADE-6.7.md#sw-tabs-is-removed #}\n<sw-tabs-item v-if=\"isPostFinanceCheckoutPayment\"\n\t\t\t  :route=\"{ name: 'postfinancecheckout.order.detail', params: { id: $route.params.id } }\"\n\t\t\t  :title=\"$tc('postfinancecheckout-order.header')\">\n\t{{ $tc('postfinancecheckout-order.header') }}\n</sw-tabs-item>\n{% endblock %}\n\n{% block sw_order_detail_actions_slot_smart_bar_actions %}\n<template v-if=\"isEditable\">\n\t{% parent %}\n</template>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './sw-order.html.twig';\nimport './sw-order.scss';\n\nconst {Component, Context} = Shopware;\nconst Criteria = Shopware.Data.Criteria;\n\nconst postfinancecheckoutFormattedHandlerIdentifier = 'handler_postfinancecheckoutpayment_postfinancecheckoutpaymenthandler';\n\nComponent.override('sw-order-detail', {\n\ttemplate,\n\n\tdata() {\n\t\treturn {\n\t\t\tisPostFinanceCheckoutPayment: false\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tisEditable() {\n\t\t\treturn !this.isPostFinanceCheckoutPayment || this.$route.name !== 'postfinancecheckout.order.detail';\n\t\t},\n\t\tshowTabs() {\n\t\t\treturn true;\n\t\t}\n\t},\n\n\twatch: {\n\t\torderId: {\n\t\t\tdeep: true,\n\t\t\thandler() {\n\t\t\t\tif (!this.orderId) {\n\t\t\t\t\tthis.setIsPostFinanceCheckoutPayment(null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst orderRepository = this.repositoryFactory.create('order');\n\t\t\t\tconst orderCriteria = new Criteria(1, 1);\n\t\t\t\torderCriteria.addAssociation('transactions');\n\n\t\t\t\torderRepository.get(this.orderId, Context.api, orderCriteria).then((order) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(order.amountTotal <= 0) ||\n\t\t\t\t\t\t(order.transactions.length <= 0) ||\n\t\t\t\t\t\t!order.transactions[0].paymentMethodId\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.setIsPostFinanceCheckoutPayment(null);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst paymentMethodId = order.transactions[0].paymentMethodId;\n\t\t\t\t\tif (paymentMethodId !== undefined && paymentMethodId !== null) {\n\t\t\t\t\t\tthis.setIsPostFinanceCheckoutPayment(paymentMethodId);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\timmediate: true\n\t\t}\n\t},\n\n\tmethods: {\n\t\tsetIsPostFinanceCheckoutPayment(paymentMethodId) {\n\t\t\tif (!paymentMethodId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst paymentMethodRepository = this.repositoryFactory.create('payment_method');\n\t\t\tpaymentMethodRepository.get(paymentMethodId, Context.api).then(\n\t\t\t\t(paymentMethod) => {\n\t\t\t\t\tthis.isPostFinanceCheckoutPayment = (paymentMethod.formattedHandlerIdentifier === postfinancecheckoutFormattedHandlerIdentifier);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n});\n","{% block postfinancecheckout_order_action_completion %}\n<sw-modal variant=\"small\"\n\t\t  :title=\"$tc(`postfinancecheckout-order.modal.title.capture`)\"\n\t\t  @modal-close=\"$emit('modal-close')\">\n\n\t{% block postfinancecheckout_order_action_completion_amount %}\n\t\t<mt-checkbox\n\t\t\t\t:label=\"$tc('postfinancecheckout-order.captureAction.button.text')\"\n\t\t\t\tv-model:checked=\"isCompletion\">\n        </mt-checkbox>\n\t{% endblock %}\n\n\t{% block postfinancecheckout_order_action_completion_confirm_button %}\n\t<template #modal-footer>\n\t\t<mt-button variant=\"primary\"\n\t\t\t\t   @click=\"completion\">\n\t\t\t{{ $tc('postfinancecheckout-order.refundAction.confirmButton.text') }}\n\t\t</mt-button>\n\t</template>\n\t{% endblock %}\n\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</sw-modal>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\n\nconst {Component, Mixin, Filter, Utils} = Shopware;\n\nComponent.register('postfinancecheckout-order-action-completion', {\n\n\ttemplate: template,\n\n\tinject: ['PostFinanceCheckoutTransactionCompletionService'],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\ttransactionData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tisLoading: true,\n\t\t\tisCompletion: false\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n\t\tcreatedComponent() {\n\t\t\tthis.isLoading = false;\n\t\t},\n\n\t\tcompletion() {\n\t\t\tif (this.isCompletion) {\n\t\t\t\tthis.isLoading = true;\n\t\t\t\tthis.PostFinanceCheckoutTransactionCompletionService.createTransactionCompletion(\n\t\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\t\tthis.transactionData.transactions[0].id\n\t\t\t\t).then(() => {\n\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\ttitle: this.$tc('postfinancecheckout-order.captureAction.successTitle'),\n\t\t\t\t\t\tmessage: this.$tc('postfinancecheckout-order.captureAction.successMessage')\n\t\t\t\t\t});\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t});\n\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: errorResponse.response.data.errors[0].title,\n\t\t\t\t\t\t\tmessage: errorResponse.response.data.errors[0].detail,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n});\n","{% block postfinancecheckout_order_action_refund %}\n<sw-modal variant=\"small\"\n\t\t  :title=\"$tc(`postfinancecheckout-order.modal.title.refund`)\"\n\t\t  @modal-close=\"$emit('modal-close')\">\n\n\t{% block postfinancecheckout_order_action_refund_amount %}\n\n\t\t<mt-number-field\n\t\t\t:max=\"this.$parent.$parent.itemRefundableQuantity\"\n\t\t\t:min=\"0\"\n\t\t\t v-model=\"refundQuantity\"\n\t\t\t :label=\"$tc('postfinancecheckout-order.refund.refundQuantity.label')\">\n\t\t</mt-number-field>\n\n\t\t<div>\n\t\t\t{{ $tc('postfinancecheckout-order.refundAction.maxAvailableItemsToRefund') }}:\n\t\t\t<b>{{ this.$parent.$parent.itemRefundableQuantity }}</b>\n\t\t</div>\n\t{% endblock %}\n\n\t{% block postfinancecheckout_order_action_refund_confirm_button %}\n\t<template #modal-footer>\n\t\t<mt-button variant=\"primary\" @click=\"refund()\">\n\t\t\t{{ $tc('postfinancecheckout-order.refundAction.confirmButton.text') }}\n\t\t</mt-button>\n\t</template>\n\t{% endblock %}\n\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</sw-modal>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\n\nconst {Component, Mixin, Filter, Utils} = Shopware;\n\nComponent.register('postfinancecheckout-order-action-refund', {\n\ttemplate,\n\n\tinject: ['PostFinanceCheckoutRefundService'],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\ttransactionData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\n\t\torderId: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\trefundQuantity: 0,\n\t\t\tisLoading: true,\n\t\t\tcurrentLineItem: '',\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n\t\tcreatedComponent() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.refundQuantity = 1;\n\t\t},\n\n\t\trefund() {\n\t\t\tthis.isLoading = true;\n\t\t\tthis.PostFinanceCheckoutRefundService.createRefund(\n\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\tthis.transactionData.transactions[0].id,\n\t\t\t\tthis.refundQuantity,\n\t\t\t\tthis.$parent.$parent.currentLineItem\n\t\t\t).then(() => {\n\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\ttitle: this.$tc('postfinancecheckout-order.refundAction.successTitle'),\n\t\t\t\t\tmessage: this.$tc('postfinancecheckout-order.refundAction.successMessage')\n\t\t\t\t});\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.$emit('modal-close');\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t});\n\t\t\t}).catch((errorResponse) => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.response.data.errors[0].title,\n\t\t\t\t\t\tmessage: errorResponse.response.data.errors[0].detail,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n","{% block postfinancecheckout_order_action_refund_partial %}\n<sw-modal variant=\"small\"\n\t\t  :title=\"$tc(`postfinancecheckout-order.modal.title.refund`)\"\n\t\t  @modal-close=\"$emit('modal-close')\">\n\n\t{% block postfinancecheckout_order_action_refund_amount_partial %}\n\t\t<mt-number-field\n\t\t :max=\"this.$parent.$parent.itemRefundableAmount\"\n\t\t :min=\"0.00\"\n\t\t v-model=\"refundAmount\"\n\t\t :label=\"$tc('postfinancecheckout-order.refund.refundAmount.label')\"\n\t\t :suffix=\"currency\">\n\t\t</mt-number-field>\n\n\t\t<div>\n\t\t\t{{ $tc('postfinancecheckout-order.refundAction.maxAvailableAmountToRefund') }}:\n\t\t\t<b>{{ this.$parent.$parent.itemRefundableAmount }}</b>\n\t\t</div>\n\t{% endblock %}\n\n\t{% block postfinancecheckout_order_action_refund_confirm_button_partial %}\n\t<template #modal-footer>\n\t\t<mt-button variant=\"primary\" @click=\"createPartialRefund(this.$parent.$parent.currentLineItem)\">\n\t\t\t{{ $tc('postfinancecheckout-order.refundAction.confirmButton.text') }}\n\t\t</mt-button>\n\t</template>\n\t{% endblock %}\n\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</sw-modal>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\n\nconst {Component, Mixin, Filter, Utils} = Shopware;\n\nComponent.register('postfinancecheckout-order-action-refund-partial', {\n\ttemplate,\n\n\tinject: ['PostFinanceCheckoutRefundService'],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\ttransactionData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\n\t\torderId: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tisLoading: true,\n\t\t\tcurrency: this.transactionData.transactions[0].currency,\n\t\t\trefundAmount: 0.00,\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n        createdComponent() {\n            this.isLoading = false;\n            this.currency = this.transactionData.transactions[0].currency;\n            if (!this.refundAmount) {\n                this.refundAmount = this.$parent.$parent.itemRefundableAmount;\n            }\n        },\n\n\t\tcreatePartialRefund(itemUniqueId) {\n\t\t\tthis.isLoading = true;\n\t\t\tthis.PostFinanceCheckoutRefundService.createPartialRefund(\n\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\tthis.transactionData.transactions[0].id,\n\t\t\t\tthis.refundAmount,\n\t\t\t\titemUniqueId\n\t\t\t).then(() => {\n\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\ttitle: this.$tc('postfinancecheckout-order.refundAction.successTitle'),\n\t\t\t\t\tmessage: this.$tc('postfinancecheckout-order.refundAction.successMessage')\n\t\t\t\t});\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.$emit('modal-close');\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t});\n\t\t\t}).catch((errorResponse) => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.response.data.errors[0].title,\n\t\t\t\t\t\tmessage: errorResponse.response.data.errors[0].detail,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n    watch: {\n        refundAmount(newValue) {\n            if (newValue !== null) {\n                this.refundAmount = Math.round(newValue * 100) / 100;\n            }\n        }\n    }\n});\n","{% block postfinancecheckout_order_action_refund_by_amount %}\n<sw-modal variant=\"small\"\n\t\t  :title=\"$tc(`postfinancecheckout-order.modal.title.refund`)\"\n\t\t  @modal-close=\"$emit('modal-close')\">\n\n\t{% block postfinancecheckout_order_action_refund_amount_by_amount %}\n\t\t<mt-number-field\n\t\t :max=\"refundableAmount\"\n\t\t :min=\"0\"\n\t\t v-model=\"refundAmount\"\n\t\t :label=\"$tc('postfinancecheckout-order.refund.refundAmount.label')\"\n\t\t :suffix=\"currency\">\n\t\t</mt-number-field>\n\t{% endblock %}\n\n\t{% block postfinancecheckout_order_action_refund_confirm_button_by_amount %}\n\t<template #modal-footer>\n\t\t<mt-button variant=\"primary\" @click=\"refundByAmount()\">\n\t\t\t{{ $tc('postfinancecheckout-order.refundAction.confirmButton.text') }}\n\t\t</mt-button>\n\t</template>\n\t{% endblock %}\n\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</sw-modal>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\n\nconst {Component, Mixin, Filter, Utils} = Shopware;\n\nComponent.register('postfinancecheckout-order-action-refund-by-amount', {\n\ttemplate,\n\n\tinject: ['PostFinanceCheckoutRefundService'],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\ttransactionData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\n\t\torderId: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tisLoading: true,\n\t\t\tcurrency: this.transactionData.transactions[0].currency,\n\t\t\trefundAmount: 0,\n\t\t\trefundableAmount: 0,\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n\t\tcreatedComponent() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.currency = this.transactionData.transactions[0].currency;\n\t\t\tthis.refundAmount = Number(this.transactionData.transactions[0].amountIncludingTax);\n\t\t\tthis.refundableAmount = Number(this.transactionData.transactions[0].amountIncludingTax);\n\t\t},\n\n\t\trefundByAmount() {\n\t\t\tthis.isLoading = true;\n\t\t\tthis.PostFinanceCheckoutRefundService.createRefundByAmount(\n\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\tthis.transactionData.transactions[0].id,\n\t\t\t\tthis.refundAmount\n\t\t\t).then(() => {\n\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\ttitle: this.$tc('postfinancecheckout-order.refundAction.successTitle'),\n\t\t\t\t\tmessage: this.$tc('postfinancecheckout-order.refundAction.successMessage')\n\t\t\t\t});\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.$emit('modal-close');\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t});\n\t\t\t}).catch((errorResponse) => {\n\t\t\t\ttry {\n\t\t\t\t\tvar errorTitle;\n\t\t\t\t\tvar errorMessage;\n\t\t\t\t\tif (errorResponse.response.data == 'refundExceedsAmount') {\n\t\t\t\t\t\terrorTitle = this.$tc('postfinancecheckout-order.refundAction.refundExceedsTotalError.title');\n\t\t\t\t\t\terrorMessage = this.$tc('postfinancecheckout-order.refundAction.refundExceedsTotalError.messageRefundAmountExceedsAvailableBalance');\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorTitle = errorResponse.response.data.errors[0].title;\n\t\t\t\t\t\terrorMessage = errorResponse.response.data.errors[0].detail;\n\t\t\t\t\t}\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorTitle,\n\t\t\t\t\t\tmessage: errorMessage,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n","{% block postfinancecheckout_order_action_void %}\n<sw-modal variant=\"small\"\n\t\t  :title=\"$tc(`postfinancecheckout-order.modal.title.void`)\"\n\t\t  @modal-close=\"$emit('modal-close')\">\n\n\t{% block postfinancecheckout_order_action_void_amount %}\n        {# Review if this v-model:checked=\"isVoid\" needs to change to checked #}\n\t\t<mt-checkbox\n\t\t\t\t:label=\"$tc('postfinancecheckout-order.voidAction.confirm.message')\"\n\t\t\t\tv-model:checked=\"isVoid\">\n        </mt-checkbox>\n\t{% endblock %}\n\n\t{% block postfinancecheckout_order_action_void_confirm_button %}\n\t<template #modal-footer>\n\t\t<mt-button variant=\"primary\"\n\t\t\t\t   @click=\"voidPayment\">\n\t\t\t{{ $tc('postfinancecheckout-order.refundAction.confirmButton.text') }}\n\t\t</mt-button>\n\t</template>\n\t{% endblock %}\n\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</sw-modal>\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\n\nconst {Component, Mixin, Filter, Utils} = Shopware;\n\nComponent.register('postfinancecheckout-order-action-void', {\n\ttemplate,\n\n\tinject: ['PostFinanceCheckoutTransactionVoidService'],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\ttransactionData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tisLoading: true,\n\t\t\tisVoid: false\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t},\n\t\tlineItemColumns() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tproperty: 'uniqueId',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.refund.types.uniqueId'),\n\t\t\t\t\trawData: false,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\tprimary: true,\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'name',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.refund.types.name'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\tsortable: true,\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'quantity',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.refund.types.quantity'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'amountIncludingTax',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.refund.types.amountIncludingTax'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\tinlineEdit: 'string',\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'type',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.refund.types.type'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\tsortable: true,\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'taxAmount',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.refund.types.taxAmount'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tallowResize: true,\n\t\t\t\t\twidth: 'auto'\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n\t\tcreatedComponent() {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.currency = this.transactionData.transactions[0].currency;\n\t\t\tthis.refundableAmount = this.transactionData.transactions[0].amountIncludingTax;\n\t\t\tthis.refundAmount = this.transactionData.transactions[0].amountIncludingTax;\n\t\t},\n\n\t\tvoidPayment() {\n\t\t\tif (this.isVoid) {\n\t\t\t\tthis.isLoading = true;\n\t\t\t\tthis.PostFinanceCheckoutTransactionVoidService.createTransactionVoid(\n\t\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\t\tthis.transactionData.transactions[0].id\n\t\t\t\t).then(() => {\n\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\ttitle: this.$tc('postfinancecheckout-order.voidAction.successTitle'),\n\t\t\t\t\t\tmessage: this.$tc('postfinancecheckout-order.voidAction.successMessage')\n\t\t\t\t\t});\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t});\n\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: errorResponse.response.data.errors[0].title,\n\t\t\t\t\t\t\tmessage: errorResponse.response.data.errors[0].detail,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\tthis.$emit('modal-close');\n\t\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\t\tthis.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n});\n","{% block postfinancecheckout_order_detail %}\n<div class=\"postfinancecheckout-order-detail\">\n\t<div v-if=\"!isLoading\">\n\t\t<mt-card :title=\"$tc('postfinancecheckout-order.paymentDetails.cardTitle')\">\n\t\t\t<template #grid>\n\t\t\t\t{% block postfinancecheckout_order_actions_section %}\n\t\t\t\t<mt-card-section secondary slim>\n\t\t\t\t\t{% block postfinancecheckout_order_transaction_refunds_action_button %}\n\t\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t:disabled=\"transaction.state != 'FULFILL' || refundableAmount <= 0\"\n\t\t\t\t\t\t\t\t@click=\"spawnModal('refundByAmount')\">\n\t\t\t\t\t\t\t{{ $tc('postfinancecheckout-order.buttons.label.refund') }}\n\t\t\t\t\t\t</mt-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t\t{% block postfinancecheckout_order_transaction_completion_action_button %}\n\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t:disabled=\"transaction.state != 'AUTHORIZED' || isLoading\"\n\t\t\t\t\t\t\t@click=\"spawnModal('completion')\">\n\t\t\t\t\t\t{{ $tc('postfinancecheckout-order.buttons.label.completion') }}\n\t\t\t\t\t</mt-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t\t{% block postfinancecheckout_order_transaction_void_action_button %}\n\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t:disabled=\"transaction.state != 'AUTHORIZED' || isLoading\"\n\t\t\t\t\t\t\t@click=\"spawnModal('void')\">\n\t\t\t\t\t\t{{ $tc('postfinancecheckout-order.buttons.label.void') }}\n\t\t\t\t\t</mt-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t\t{% block postfinancecheckout_order_transaction_download_invoice_action_button %}\n\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t:disabled=\"transaction.state != 'FULFILL'\"\n\t\t\t\t\t\t\t@click=\"downloadInvoice()\">\n\t\t\t\t\t\t{{ $tc('postfinancecheckout-order.buttons.label.download-invoice') }}\n\t\t\t\t\t</mt-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t\t{% block postfinancecheckout_order_transaction_download_packing_slip_action_button %}\n\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t:disabled=\"transaction.state != 'FULFILL'\"\n\t\t\t\t\t\t\t@click=\"downloadPackingSlip()\">\n\t\t\t\t\t\t{{ $tc('postfinancecheckout-order.buttons.label.download-packing-slip') }}\n\t\t\t\t\t</mt-button>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</mt-card-section>\n\t\t\t\t{% endblock %}\n\t\t\t</template>\n\t\t</mt-card>\n\t\t{% block postfinancecheckout_order_transaction_history_card %}\n\t\t<mt-card :title=\"$tc('postfinancecheckout-order.transactionHistory.cardTitle')\">\n\t\t\t<template #grid>\n\n\t\t\t\t{% block postfinancecheckout_order_transaction_history_grid %}\n\t\t\t\t<sw-data-grid :dataSource=\"transactionData.transactions\"\n\t\t\t\t\t\t\t  :columns=\"relatedResourceColumns\"\n\t\t\t\t\t\t\t  :showActions=\"true\"\n\t\t\t\t\t\t\t  :showSelection=\"false\">\n\n\t\t\t\t\t<template #actions=\"{ item }\">\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.customerId\">{{ $tc('postfinancecheckout-order.transactionHistory.customerId') }}: {{ item.customerId }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.customerName\">{{ $tc('postfinancecheckout-order.transactionHistory.customerName') }}: {{ item.customerName }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.creditCardHolder\">{{ $tc('postfinancecheckout-order.transactionHistory.creditCardHolder') }}: {{ item.creditCardHolder }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.paymentMethodName\">{{ $tc('postfinancecheckout-order.transactionHistory.paymentMethod') }}: {{ item.paymentMethodName }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.brandName\">{{ $tc('postfinancecheckout-order.transactionHistory.paymentMethodBrand') }}: {{ item.brandName }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.pseudoCardNumber\">{{ $tc('postfinancecheckout-order.transactionHistory.PseudoCreditCardNumber') }}: {{ item.pseudoCardNumber }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.pseudoCardNumber && item.cardExpireMonth && item.cardExpireYear\">{{ $tc('postfinancecheckout-order.transactionHistory.CardExpire') }}: {{ item.cardExpireMonth }} / {{ item.cardExpireYear }}</sw-context-menu-item>\n\t\t\t\t\t\t<sw-context-menu-item v-if=\"item.payId\">PayID: {{ item.payId }}</sw-context-menu-item>\n\t\t\t\t\t</template>\n\t\t\t\t</sw-data-grid>\n\t\t\t\t{% endblock %}\n\t\t\t</template>\n\n\t\t</mt-card>\n\t\t{% endblock %}\n\t\t{% block postfinancecheckout_order_transaction_line_items_card %}\n        <mt-card :title=\"$tc('postfinancecheckout-order.lineItem.cardTitle')\">\n            <template #grid>\n\n                {% block postfinancecheckout_order_transaction_line_items_grid %}\n                    <sw-data-grid\n                            :dataSource=\"lineItems\"\n                            :columns=\"lineItemColumns\"\n                            :showActions=\"true\"\n                            :showSelection=\"true\"\n                            :local-mode=\"false\"\n                            :is-record-selectable=\"isSelectable\"\n                            @selection-change=\"onSelectionChanged\"\n                    >\n                    {% block postfinancecheckout_order_transaction_line_items_grid_grid_actions %}\n                        <template #actions=\"{ item }\">\n                            <sw-context-menu-item\n                                    :disabled=\"transaction.state != 'FULFILL' || item.refundableQuantity != item.quantity || item.refundableAmount == 0 || item.itemRefundedAmount > 0 || item.itemRefundedQuantity > 0\"\n                                    @click=\"lineItemRefund(item.uniqueId)\">\n                                {{ $tc('postfinancecheckout-order.buttons.label.refund-whole-line-item') }}\n                            </sw-context-menu-item>\n\n                            <sw-context-menu-item\n                                    :disabled=\"transaction.state != 'FULFILL' || item.refundableQuantity == 0 || item.refundableAmount == 0 || item.itemRefundedAmount > 0\"\n                                    @click=\"spawnModal('refund', item.uniqueId, item.refundableQuantity)\">\n                                {{ $tc('postfinancecheckout-order.buttons.label.refund-line-item-by-quantity') }}\n                            </sw-context-menu-item>\n\n                            <sw-context-menu-item\n                                    :disabled=\"transaction.state != 'FULFILL' || item.refundableQuantity == 0 || item.refundableAmount == 0 || item.itemRefundedQuantity > 0\"\n                                    @click=\"spawnModal('partialRefund', item.uniqueId, item.refundableQuantity, item.refundableAmount)\">\n                                {{ $tc('postfinancecheckout-order.buttons.label.refund-line-item-parial') }}\n                            </sw-context-menu-item>\n                        </template>\n                    {% endblock %}\n                    {% block postfinancecheckout_order_transaction_line_items_grid_bulk_actions %}\n                        <template #bulk>\n                            <a\n                                    class=\"link link-danger\"\n                                    role=\"link\"\n                                    tabindex=\"0\"\n                                    :disabled=\"selectedItems.length === 0\"\n                                    @click=\"onPerformBulkAction\">\n                                {{ $tc('postfinancecheckout-order.buttons.label.refund-line-item-selected') }}\n                            </a>\n                        </template>\n                    {% endblock %}\n\n                    </sw-data-grid>\n                {% endblock %}\n            </template>\n        </mt-card>\n\t\t{% endblock %}\n\t\t{% block postfinancecheckout_order_transaction_refunds_card %}\n\t\t<mt-card :title=\"$tc('postfinancecheckout-order.refund.cardTitle')\" v-if=\"transactionData.refunds.length > 0\">\n\t\t\t<template #grid>\n\n\t\t\t\t{% block postfinancecheckout_order_transaction_refunds_grid %}\n\t\t\t\t<sw-data-grid\n\t\t\t\t\t\t:dataSource=\"transactionData.refunds\"\n\t\t\t\t\t\t:columns=\"refundColumns\"\n\t\t\t\t\t\t:showActions=\"false\"\n\t\t\t\t\t\t:showSelection=\"false\">\n\t\t\t\t</sw-data-grid>\n\t\t\t\t{% endblock %}\n\t\t\t</template>\n\n\t\t</mt-card>\n\t\t{% endblock %}\n\t\t{% block postfinancecheckout_order_actions_modal_refund_partial %}\n\t\t\t<postfinancecheckout-order-action-refund-partial\n\t\t\t\t\tv-if=\"modalType === 'partialRefund'\"\n\t\t\t\t\t:orderId=\"orderId\"\n\t\t\t\t\t:transactionData=\"transactionData\"\n\t\t\t\t\t:lineItems=\"lineItems\"\n\t\t\t\t\t@modal-close=\"closeModal\">\n\t\t\t</postfinancecheckout-order-action-refund-partial>\n\t\t{% endblock %}\n\t\t{% block postfinancecheckout_order_actions_modal_refund %}\n\t\t<postfinancecheckout-order-action-refund\n\t\t\t\tv-if=\"modalType === 'refund'\"\n\t\t\t\t:orderId=\"orderId\"\n\t\t\t\t:transactionData=\"transactionData\"\n\t\t\t\t:lineItems=\"lineItems\"\n\t\t\t\t@modal-close=\"closeModal\">\n\t\t</postfinancecheckout-order-action-refund>\n\t\t{% endblock %}\n\t\t{% block postfinancecheckout_order_actions_modal_refund_by_amount %}\n\t\t\t<postfinancecheckout-order-action-refund-by-amount\n\t\t\t\t\tv-if=\"modalType === 'refundByAmount'\"\n\t\t\t\t\t:orderId=\"orderId\"\n\t\t\t\t\t:transactionData=\"transactionData\"\n\t\t\t\t\t:lineItems=\"lineItems\"\n\t\t\t\t\t@modal-close=\"closeModal\">\n\t\t\t</postfinancecheckout-order-action-refund-by-amount>\n\t\t{% endblock %}\n\t\t{% block postfinancecheckout_order_actions_modal_completion%}\n\t\t<postfinancecheckout-order-action-completion\n\t\t\t\tv-if=\"modalType === 'completion'\"\n\t\t\t\t:orderId=\"orderId\"\n\t\t\t\t:transactionData=\"transactionData\"\n\t\t\t\t:lineItems=\"lineItems\"\n\t\t\t\t@modal-close=\"closeModal\">\n\t\t</postfinancecheckout-order-action-completion>\n\t\t{% endblock %}\n\t\t{% block postfinancecheckout_order_actions_modal_void %}\n\t\t<postfinancecheckout-order-action-void\n\t\t\t\tv-if=\"modalType === 'void'\"\n\t\t\t\t:orderId=\"orderId\"\n\t\t\t\t:transactionData=\"transactionData\"\n\t\t\t\t:lineItems=\"lineItems\"\n\t\t\t\t@modal-close=\"closeModal\">\n\t\t</postfinancecheckout-order-action-void>\n\t\t{% endblock %}\n\t</div>\n\t<mt-loader v-if=\"isLoading\"></mt-loader>\n</div>\n{% endblock %}\n","/* global Shopware */\n\nimport '../../component/postfinancecheckout-order-action-completion';\nimport '../../component/postfinancecheckout-order-action-refund';\nimport '../../component/postfinancecheckout-order-action-refund-partial';\nimport '../../component/postfinancecheckout-order-action-refund-by-amount';\nimport '../../component/postfinancecheckout-order-action-void';\nimport template from './index.html.twig';\nimport './index.scss';\n\nconst {Component, Mixin, Filter, Context, Utils} = Shopware;\nconst Criteria = Shopware.Data.Criteria;\n\nComponent.register('postfinancecheckout-order-detail', {\n\ttemplate,\n\n\tinject: [\n\t\t'PostFinanceCheckoutTransactionService',\n\t\t'PostFinanceCheckoutRefundService',\n\t\t'repositoryFactory'\n\t],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tdata() {\n\t\treturn {\n\t\t\ttransactionData: {\n\t\t\t\ttransactions: [],\n\t\t\t\trefunds: []\n\t\t\t},\n\t\t\ttransaction: {},\n\t\t\tlineItems: [],\n\t\t\trefundableQuantity: 0,\n\t\t\titemRefundableQuantity: 0,\n\t\t\tisLoading: true,\n\t\t\torderId: '',\n\t\t\tcurrency: '',\n\t\t\tmodalType: '',\n\t\t\trefundAmount: 0.00,\n\t\t\trefundableAmount: 0.00,\n\t\t\titemRefundedAmount: 0.00,\n\t\t\titemRefundedQuantity: 0,\n\t\t\titemRefundableAmount: 0.00,\n\t\t\tcurrentLineItem: '',\n\t\t\trefundLineItemQuantity: [],\n\t\t\trefundLineItemAmount: [],\n\t\t\tselectedItems: []\n\t\t};\n\t},\n\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$tc('postfinancecheckout-order.header')\n\t\t};\n\t},\n\n\n\tcomputed: {\n\t\tdateFilter() {\n\t\t\treturn Filter.getByName('date');\n\t\t},\n\n\t\trelatedResourceColumns() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tproperty: 'paymentMethodName',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.transactionHistory.types.payment_method'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'state',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.transactionHistory.types.state'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'currency',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.transactionHistory.types.currency'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'authorized_amount',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.transactionHistory.types.authorized_amount'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'id',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.transactionHistory.types.transaction'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'customerId',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.transactionHistory.types.customer'),\n\t\t\t\t\trawData: true\n\t\t\t\t}\n\t\t\t];\n\t\t},\n\n\t\tlineItemColumns() {\n\t\t\treturn [\n\t\t\t    // It must be set in order to have correctly working checkbox mechanism\n\t\t\t\t{\n\t\t\t\t\tproperty: 'id',\n\t\t\t\t\trawData: true,\n\t\t\t\t\tvisible: false,\n\t\t\t\t\tprimary: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'uniqueId',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.lineItem.types.uniqueId'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tvisible: false,\n\t\t\t\t\tprimary: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'name',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.lineItem.types.name'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'quantity',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.lineItem.types.quantity'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'amountIncludingTax',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.lineItem.types.amountIncludingTax'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'type',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.lineItem.types.type'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'taxAmount',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.lineItem.types.taxAmount'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'refundableQuantity',\n\t\t\t\t\trawData: true,\n\t\t\t\t\tvisible: false,\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\n\t\trefundColumns() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tproperty: 'id',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.refund.types.id'),\n\t\t\t\t\trawData: true,\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tprimary: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'amount',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.refund.types.amount'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'state',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.refund.types.state'),\n\t\t\t\t\trawData: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tproperty: 'createdOn',\n\t\t\t\t\tlabel: this.$tc('postfinancecheckout-order.refund.types.createdOn'),\n\t\t\t\t\trawData: true\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t},\n\n\twatch: {\n\t\t'$route'() {\n\t\t\tthis.resetDataAttributes();\n\t\t\tthis.createdComponent();\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.createdComponent();\n\t},\n\n\tmethods: {\n\t\tcreatedComponent() {\n\t\t\tthis.orderId = this.$route.params.id;\n\t\t\tconst orderRepository = this.repositoryFactory.create('order');\n\t\t\tconst orderCriteria = new Criteria(1, 1);\n\t\t\torderCriteria.addAssociation('transactions');\n\t\t\torderCriteria.getAssociation('transactions').addSorting(Criteria.sort('createdAt', 'DESC'));\n\n\t\t\torderRepository.get(this.orderId, Context.api, orderCriteria).then((order) => {\n\t\t\t\tthis.order = order;\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tvar totalAmountTemp = 0;\n\t\t\t\tvar refundsAmountTemp = 0;\n\t\t\t\tconst postfinancecheckoutTransactionId = order.transactions[0].customFields.postfinancecheckout_transaction_id;\n\t\t\t\tthis.PostFinanceCheckoutTransactionService.getTransactionData(order.salesChannelId, postfinancecheckoutTransactionId)\n\t\t\t\t\t.then((PostFinanceCheckoutTransaction) => {\n\t\t\t\t\t\tthis.currency = PostFinanceCheckoutTransaction.transactions[0].currency;\n\n\t\t\t\t\t\tPostFinanceCheckoutTransaction.transactions[0].authorized_amount = Utils.format.currency(\n\t\t\t\t\t\t\tPostFinanceCheckoutTransaction.transactions[0].authorizationAmount,\n\t\t\t\t\t\t\tthis.currency\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tPostFinanceCheckoutTransaction.refunds.forEach((refund) => {\n\t\t\t\t\t\t\trefundsAmountTemp = parseFloat(parseFloat(refundsAmountTemp) + parseFloat(refund.amount));\n\t\t\t\t\t\t\trefund.amount = Utils.format.currency(\n\t\t\t\t\t\t\t\trefund.amount,\n\t\t\t\t\t\t\t\tthis.currency\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\trefund.reductions.forEach((reduction) => {\n\t\t\t\t\t\t\t    if (reduction.quantityReduction > 0) {\n                                    if (this.refundLineItemQuantity[reduction.lineItemUniqueId] === undefined) {\n                                        this.refundLineItemQuantity[reduction.lineItemUniqueId] = reduction.quantityReduction;\n                                    } else {\n                                        this.refundLineItemQuantity[reduction.lineItemUniqueId] += reduction.quantityReduction;\n                                    }\n\t\t\t\t\t\t\t    }\n                                if (reduction.unitPriceReduction > 0) {\n                                    if (this.refundLineItemAmount[reduction.lineItemUniqueId] === undefined) {\n                                        this.refundLineItemAmount[reduction.lineItemUniqueId] = reduction.unitPriceReduction;\n                                    } else {\n                                        this.refundLineItemAmount[reduction.lineItemUniqueId] += reduction.unitPriceReduction;\n                                    }\n                                }\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tPostFinanceCheckoutTransaction.transactions[0].lineItems.forEach((lineItem) => {\n\t\t\t\t\t\t\tif (!lineItem.id) {\n\t\t\t\t\t\t\t\tlineItem.id = lineItem.uniqueId;\n                            }\n\n                            lineItem.itemRefundedAmount = parseFloat(this.refundLineItemAmount[lineItem.uniqueId] || 0) * parseInt(lineItem.quantity);\n                            lineItem.amountIncludingTax = parseFloat(lineItem.amountIncludingTax) || 0;\n\n                            lineItem.itemRefundedQuantity = parseInt(this.refundLineItemQuantity[lineItem.uniqueId]) || 0;\n                            lineItem.refundableAmount = parseFloat(\n                              (lineItem.amountIncludingTax - lineItem.itemRefundedAmount).toFixed(2)\n                            );\n\n\t\t\t\t\t\t\tlineItem.amountIncludingTax = Utils.format.currency(\n\t\t\t\t\t\t\t\tlineItem.amountIncludingTax,\n\t\t\t\t\t\t\t\tthis.currency\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tlineItem.taxAmount = Utils.format.currency(\n\t\t\t\t\t\t\t\tlineItem.taxAmount,\n\t\t\t\t\t\t\t\tthis.currency\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\ttotalAmountTemp = parseFloat(parseFloat(totalAmountTemp) + parseFloat(lineItem.unitPriceIncludingTax * lineItem.quantity));\n\n\t\t\t\t\t\t\tlineItem.refundableQuantity = parseInt(\n\t\t\t\t\t\t\t\tparseInt(lineItem.quantity) - parseInt(this.refundLineItemQuantity[lineItem.uniqueId] || 0)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.lineItems = PostFinanceCheckoutTransaction.transactions[0].lineItems;\n\t\t\t\t\t\tthis.transactionData = PostFinanceCheckoutTransaction;\n\t\t\t\t\t\tthis.transaction = this.transactionData.transactions[0];\n\t\t\t\t\t\tthis.refundAmount = Number(this.transactionData.transactions[0].amountIncludingTax);\n\t\t\t\t\t\tthis.refundableAmount = parseFloat(parseFloat(totalAmountTemp) - parseFloat(refundsAmountTemp));\n\n\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('postfinancecheckout-order.paymentDetails.error.title'),\n\t\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('postfinancecheckout-order.paymentDetails.error.title'),\n\t\t\t\t\t\t\tmessage: errorResponse.message,\n\t\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tdownloadPackingSlip() {\n\t\t\twindow.open(\n\t\t\t\tthis.PostFinanceCheckoutTransactionService.getPackingSlip(\n\t\t\t\t\tthis.transaction.metaData.salesChannelId,\n\t\t\t\t\tthis.transaction.id\n\t\t\t\t),\n\t\t\t\t'_blank'\n\t\t\t);\n\t\t},\n\n\t\tdownloadInvoice() {\n\t\t\twindow.open(\n\t\t\t\tthis.PostFinanceCheckoutTransactionService.getInvoiceDocument(\n\t\t\t\t\tthis.transaction.metaData.salesChannelId,\n\t\t\t\t\tthis.transaction.id\n\t\t\t\t),\n\t\t\t\t'_blank'\n\t\t\t);\n\t\t},\n\n\t\tresetDataAttributes() {\n\t\t\tthis.transactionData = {\n\t\t\t\ttransactions: [],\n\t\t\t\trefunds: []\n\t\t\t};\n\t\t\tthis.lineItems = [];\n\t\t\tthis.refundLineItemQuantity = [];\n\t\t\tthis.refundLineItemAmount = [];\n\t\t\tthis.isLoading = true;\n\t\t},\n\n\t\tspawnModal(modalType, lineItemId, refundableQuantity, itemRefundableAmount) {\n\t\t\tthis.modalType = modalType;\n\t\t\tthis.currentLineItem = lineItemId;\n\t\t\tthis.itemRefundableQuantity = refundableQuantity;\n            this.itemRefundableAmount = !isNaN(itemRefundableAmount) ? Math.round(itemRefundableAmount * 100) / 100 : 0;\n\t\t},\n\n\t\tcloseModal() {\n\t\t\tthis.modalType = '';\n\t\t},\n\n\t\tlineItemRefund(lineItemId) {\n\t\t\tthis.isLoading = true;\n\t\t\tthis.PostFinanceCheckoutRefundService.createRefund(\n\t\t\t\tthis.transactionData.transactions[0].metaData.salesChannelId,\n\t\t\t\tthis.transactionData.transactions[0].id,\n\t\t\t\t0,\n\t\t\t\tlineItemId\n\t\t\t).then(() => {\n\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\ttitle: this.$tc('postfinancecheckout-order.refundAction.successTitle'),\n\t\t\t\t\tmessage: this.$tc('postfinancecheckout-order.refundAction.successMessage')\n\t\t\t\t});\n                this.isLoading = false;\n                this.$emit('modal-close');\n                this.$nextTick(() => {\n                    this.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n                });\n\t\t\t}).catch((errorResponse) => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.response.data.errors[0].title,\n\t\t\t\t\t\tmessage: errorResponse.response.data.errors[0].detail,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: errorResponse.title,\n\t\t\t\t\t\tmessage: errorResponse.response.data,\n\t\t\t\t\t\tautoClose: false\n\t\t\t\t\t});\n\t\t\t\t} finally {\n                    this.isLoading = false;\n                    this.$emit('modal-close');\n                    this.$nextTick(() => {\n                        this.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n                    });\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tisSelectable(item) {\n\t\t\treturn item.refundableQuantity > 0 && item.refundableAmount > 0 && item.itemRefundedAmount == 0 && item.itemRefundedQuantity == 0;\n\t\t},\n\t\tonSelectionChanged(selection) {\n\t\t\tthis.selectedItems = Object.values(selection);\n\t\t},\n        onPerformBulkAction() {\n            if (this.selectedItems.length) {\n                // Set isLoading to true to show the loader\n                this.isLoading = true;\n\n                // Force the DOM to update before proceeding with the asynchronous operations\n                this.$nextTick(() => {\n                    const refundPromises = this.selectedItems.map((item) => {\n                        return this.lineItemRefundBulk(item.uniqueId); // Simulated refund action with delay\n                    });\n\n                    // Wait for all refund promises to complete\n                    Promise.all(refundPromises)\n                        .then(() => {\n                            // Once all promises are resolved, hide the loader and close the modal\n                            this.isLoading = false;\n                            this.$emit('modal-close');\n                            this.$nextTick(() => {\n                                this.$router.replace(`${this.$route.path}?hash=${Utils.createId()}`);\n                            });\n                        })\n                        .catch((error) => {\n                            // Handle any errors during the refund process\n                            this.createNotificationError({\n                                title: 'Error',\n                                message: 'Something went wrong with the refunds',\n                                autoClose: false\n                            });\n                            this.isLoading = false; // Ensure the loader is hidden even on error\n                        });\n                });\n            }\n        },\n        lineItemRefundBulk(lineItemId) {\n            return new Promise((resolve, reject) => {\n                this.PostFinanceCheckoutRefundService.createRefund(\n                    this.transactionData.transactions[0].metaData.salesChannelId,\n                    this.transactionData.transactions[0].id,\n                    0,\n                    lineItemId\n                )\n                .then(() => {\n                    this.createNotificationSuccess({\n                        title: this.$tc('postfinancecheckout-order.refundAction.successTitle'),\n                        message: this.$tc('postfinancecheckout-order.refundAction.successMessage')\n                    });\n                    resolve();\n                })\n                .catch((errorResponse) => {\n                    try {\n                        this.createNotificationError({\n                            title: errorResponse.response.data.errors[0].title,\n                            message: errorResponse.response.data.errors[0].detail,\n                            autoClose: false\n                        });\n                    } catch (e) {\n                        this.createNotificationError({\n                            title: errorResponse.title,\n                            message: errorResponse.response.data,\n                            autoClose: false\n                        });\n                    } finally {\n                        reject();\n                    }\n                });\n            });\n        },\n\t}\n});\n","/* global Shopware */\n\nimport './extension/sw-order';\nimport './page/postfinancecheckout-order-detail';\n\nimport deDE from './snippet/de-DE.json';\nimport enGB from './snippet/en-GB.json';\nimport frFR from './snippet/fr-FR.json';\nimport itIT from './snippet/it-IT.json';\n\nconst {Module} = Shopware;\n\nModule.register('postfinancecheckout-order', {\n\ttype: 'plugin',\n\tname: 'PostFinanceCheckout',\n\ttitle: 'postfinancecheckout-order.general.title',\n\tdescription: 'postfinancecheckout-order.general.descriptionTextModule',\n\tversion: '1.0.1',\n\ttargetVersion: '1.0.1',\n\tcolor: '#2b52ff',\n\n\tsnippets: {\n\t\t'de-DE': deDE,\n\t\t'en-GB': enGB,\n\t\t'fr-FR': frFR,\n\t\t'it-IT': itIT\n\t},\n\n\trouteMiddleware(next, currentRoute) {\n\t\tif (currentRoute.name === 'sw.order.detail') {\n\t\t\tcurrentRoute.children.push({\n\t\t\t\tcomponent: 'postfinancecheckout-order-detail',\n\t\t\t\tname: 'postfinancecheckout.order.detail',\n\t\t\t\tisChildren: true,\n\t\t\t\tpath: '/sw/order/postfinancecheckout/detail/:id'\n\t\t\t});\n\t\t}\n\t\tnext(currentRoute);\n\t}\n});\n","Shopware.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: 'postfinancecheckout',\n    key: 'postfinancecheckout',\n    roles: {\n        viewer: {\n            privileges: [\n                'sales_channel:read',\n                'sales_channel_payment_method:read',\n                'system_config:read'\n            ],\n            dependencies: []\n        },\n        editor: {\n            privileges: [\n                'sales_channel:update',\n                'sales_channel_payment_method:create',\n                'sales_channel_payment_method:update',\n                'system_config:update',\n                'system_config:create',\n                'system_config:delete'\n            ],\n            dependencies: [\n                'postfinancecheckout.viewer'\n            ]\n        }\n    }\n});\n\nShopware.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: null,\n    key: 'sales_channel',\n    roles: {\n        viewer: {\n            privileges: [\n                'sales_channel_payment_method:read'\n            ]\n        },\n        editor: {\n            privileges: [\n                'payment_method:update'\n            ]\n        },\n        creator: {\n            privileges: [\n                'payment_method:create',\n                'shipping_method:create',\n                'delivery_time:create'\n            ]\n        },\n        deleter: {\n            privileges: [\n                'payment_method:delete'\n            ]\n        }\n    }\n});\n","{% block postfinancecheckout_settings %}\n<sw-page class=\"postfinancecheckout-settings\">\n\n\t{% block postfinancecheckout_settings_header %}\n\t<template #smart-bar-header>\n\t\t<h2>\n\t\t\t{{ $tc('sw-settings.index.title') }}\n\t\t\t<mt-icon name=\"small-arrow-medium-right\" size=\"16px\"></mt-icon>\n\t\t\t{{ $tc('postfinancecheckout-settings.header') }}\n\t\t</h2>\n\t</template>\n\t{% endblock %}\n\n\t{% block postfinancecheckout_settings_actions %}\n\t<template #smart-bar-actions>\n\t\t{% block postfinancecheckout_settings_actions_save %}\n\t\t<mt-button\n\t\t\t\tv-model:value=\"isSaveSuccessful\"\n\t\t\t\tclass=\"sw-settings-login-registration__save-action\"\n\t\t\t\tvariant=\"primary\"\n\t\t\t\t:isLoading=\"isLoading\"\n\t\t\t\t:disabled=\"isLoading\"\n\t\t\t\t@click=\"onSave\">\n\t\t\t{{ $tc('postfinancecheckout-settings.settingForm.save') }}\n\t\t</mt-button>\n\t\t{% endblock %}\n\t</template>\n\t{% endblock %}\n\n\t{% block postfinancecheckout_settings_content %}\n\t<template #content>\n\n\t\t{% block postfinancecheckout_settings_content_card %}\n\t\t<mt-card-view>\n\n\t\t\t{% block postfinancecheckout_settings_content_card_channel_config %}\n\t\t\t<sw-sales-channel-config v-model:value=\"config\"\n\t\t\t\t\t\t\t\t\t ref=\"configComponent\"\n\t\t\t\t\t\t\t\t\t :domain=\"CONFIG_DOMAIN\">\n\n\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_sales_channel %}\n\t\t\t\t<template #select=\"{ onInput, selectedSalesChannelId, salesChannel }\">\n\n\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_sales_channel_card %}\n\t\t\t\t\t<mt-card title=\"Sales Channel Switch\">\n\n\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_sales_channel_card_title %}\n\t\t\t\t\t\t<sw-entity-single-select\n\t\t\t\t\t\t\t\tv-model:value=\"selectedSalesChannelId\"\n\t\t\t\t\t\t\t\tlabelProperty=\"translated.name\"\n\t\t\t\t\t\t\t\tvalueProperty=\"id\"\n\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t:isLoading=\"isLoading\"\n\t\t\t\t\t\t\t\tentity=\"sales_channel\"\n\t\t\t\t\t\t\t\t@update:value=\"onInput\">\n\t\t\t\t\t\t</sw-entity-single-select>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_sales_channel_card_footer %}\n\t\t\t\t\t\t<template #footer>\n\n\t\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_sales_channel_card_footer_container %}\n\t\t\t\t\t\t\t<sw-container columns=\"2fr 1fr\" gap=\"0px 30px\">\n\n\t\t\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_sales_channel_card_footer_container_text %}\n\t\t\t\t\t\t\t\t<p>{{ $tc('postfinancecheckout-settings.salesChannelCard.button.description') }}</p>\n\t\t\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_sales_channel_card_footer_container_button %}\n\t\t\t\t\t\t\t\t<sw-button\n\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\t\tv-model:value=\"isSetDefaultPaymentSuccessful\"\n\t\t\t\t\t\t\t\t\t\t:isLoading=\"isSettingDefaultPaymentMethods\"\n\t\t\t\t\t\t\t\t\t\t@click=\"onSetPaymentMethodDefault\">\n\t\t\t\t\t\t\t\t\t{{ $tc('postfinancecheckout-settings.salesChannelCard.button.label') }}\n\t\t\t\t\t\t\t\t</sw-button>\n\t\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t\t</sw-container>\n\t\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t</mt-card>\n\t\t\t\t\t{% endblock %}\n\t\t\t\t</template>\n\t\t\t\t{% endblock %}\n\n\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_cards %}\n\t\t\t\t<template #content=\"{ actualConfigData, allConfigs, selectedSalesChannelId }\">\n\t\t\t\t\t<div v-if=\"actualConfigData\">\n\n\t\t\t\t\t\t<sw-postfinancecheckout-credentials\n\t\t\t\t\t\t\t\t:actualConfigData=\"actualConfigData\"\n\t\t\t\t\t\t\t\t:allConfigs=\"allConfigs\"\n\t\t\t\t\t\t\t\t:selectedSalesChannelId=\"selectedSalesChannelId\"\n\t\t\t\t\t\t\t\t:spaceIdErrorState=\"spaceIdErrorState\"\n\t\t\t\t\t\t\t\t:userIdErrorState=\"userIdErrorState\"\n\t\t\t\t\t\t\t\t:applicationKeyErrorState=\"applicationKeyErrorState\"\n\t\t\t\t\t\t\t\t:spaceIdFilled=\"spaceIdFilled\"\n\t\t\t\t\t\t\t\t:userIdFilled=\"userIdFilled\"\n\t\t\t\t\t\t\t\t:applicationKeyFilled=\"applicationKeyFilled\"\n\t\t\t\t\t\t\t\t:isLoading=\"isLoading\"\n\t\t\t\t\t\t\t\t:isTesting=\"isTesting\"\n\t\t\t\t\t\t\t\t@check-api-connection-event=\"onCheckApiConnection\"\n\t\t\t\t\t\t></sw-postfinancecheckout-credentials>\n\n\t\t\t\t\t\t<sw-postfinancecheckout-options\n\t\t\t\t\t\t\t\t:actualConfigData=\"actualConfigData\"\n\t\t\t\t\t\t\t\t:allConfigs=\"allConfigs\"\n\t\t\t\t\t\t\t\t:isLoading=\"isLoading\"\n\t\t\t\t\t\t\t\t:selectedSalesChannelId=\"selectedSalesChannelId\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</sw-postfinancecheckout-options>\n\n\t\t\t\t\t\t<sw-postfinancecheckout-storefront-options\n\t\t\t\t\t\t\t\t:actualConfigData=\"actualConfigData\"\n\t\t\t\t\t\t\t\t:allConfigs=\"allConfigs\"\n\t\t\t\t\t\t\t\t:isLoading=\"isLoading\"\n\t\t\t\t\t\t\t\t:selectedSalesChannelId=\"selectedSalesChannelId\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</sw-postfinancecheckout-storefront-options>\n\n\t\t\t\t\t\t<sw-postfinancecheckout-advanced-options\n\t\t\t\t\t\t\t\t:actualConfigData=\"actualConfigData\"\n\t\t\t\t\t\t\t\t:allConfigs=\"allConfigs\"\n\t\t\t\t\t\t\t\t:isLoading=\"isLoading\"\n\t\t\t\t\t\t\t\t:selectedSalesChannelId=\"selectedSalesChannelId\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</sw-postfinancecheckout-advanced-options>\n\n\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t\t{% endblock %}\n\n\t\t\t</sw-sales-channel-config>\n\t\t\t{% endblock %}\n\n\t\t\t{% block postfinancecheckout_settings_content_card_loading %}\n\t\t\t<mt-loader v-if=\"isLoading\"></mt-loader>\n\t\t\t{% endblock %}\n\t\t</mt-card-view>\n\t\t{% endblock %}\n\n\t</template>\n\t{% endblock %}\n</sw-page>\n{% endblock %}\n","export const CONFIG_DOMAIN = 'PostFinanceCheckoutPayment.config';\nexport const CONFIG_APPLICATION_KEY = CONFIG_DOMAIN + '.' + 'applicationKey';\nexport const CONFIG_EMAIL_ENABLED = CONFIG_DOMAIN + '.' + 'emailEnabled';\nexport const CONFIG_INTEGRATION = CONFIG_DOMAIN + '.' + 'integration';\nexport const CONFIG_LINE_ITEM_CONSISTENCY_ENABLED = CONFIG_DOMAIN + '.' + 'lineItemConsistencyEnabled';\nexport const CONFIG_SPACE_ID = CONFIG_DOMAIN + '.' + 'spaceId';\nexport const CONFIG_SPACE_VIEW_ID = CONFIG_DOMAIN + '.' + 'spaceViewId';\nexport const CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED = CONFIG_DOMAIN + '.' + 'storefrontInvoiceDownloadEnabled';\nexport const CONFIG_USER_ID = CONFIG_DOMAIN + '.' + 'userId';\nexport const CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED = CONFIG_DOMAIN + '.' + 'storefrontWebhooksUpdateEnabled';\nexport const CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED = CONFIG_DOMAIN + '.' + 'storefrontPaymentsUpdateEnabled';\n\nexport default {\n    CONFIG_DOMAIN,\n    CONFIG_APPLICATION_KEY,\n    CONFIG_EMAIL_ENABLED,\n    CONFIG_INTEGRATION,\n    CONFIG_LINE_ITEM_CONSISTENCY_ENABLED,\n    CONFIG_SPACE_ID,\n    CONFIG_SPACE_VIEW_ID,\n    CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED,\n    CONFIG_USER_ID,\n    CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED,\n    CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED\n};","/* global Shopware */\n\nimport template from './index.html.twig';\nimport constants from './configuration-constants';\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('postfinancecheckout-settings', {\n\n    template: template,\n\n    inject: [\n        'acl',\n        'PostFinanceCheckoutConfigurationService'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n\n            config: {},\n\n            isLoading: false,\n            isTesting: false,\n\n            isSaveSuccessful: false,\n\n            applicationKeyFilled: false,\n            applicationKeyErrorState: false,\n\n            spaceIdFilled: false,\n            spaceIdErrorState: false,\n\n            userIdFilled: false,\n            userIdErrorState: false,\n\n            isSetDefaultPaymentSuccessful: false,\n            isSettingDefaultPaymentMethods: false,\n\n            configIntegrationDefaultValue: 'payment_page',\n            configEmailEnabledDefaultValue: true,\n            configLineItemConsistencyEnabledDefaultValue: true,\n            configStorefrontInvoiceDownloadEnabledEnabledDefaultValue: true,\n            configStorefrontWebhooksUpdateEnabledDefaultValue: true,\n            configStorefrontPaymentsUpdateEnabledDefaultValue: true,\n\n            ...constants\n        };\n    },\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: true\n        }\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n\n    watch: {\n        config: {\n            handler(configData) {\n                const defaultConfig = this.$refs.configComponent.allConfigs.null;\n                const salesChannelId = this.$refs.configComponent.selectedSalesChannelId;\n                if (salesChannelId === null) {\n\n                    this.applicationKeyFilled = !!this.config[this.CONFIG_APPLICATION_KEY];\n                    this.spaceIdFilled = !!this.config[this.CONFIG_SPACE_ID];\n                    this.userIdFilled = !!this.config[this.CONFIG_USER_ID];\n\n                    if (!(this.CONFIG_INTEGRATION in this.config)) {\n                        this.config[this.CONFIG_INTEGRATION] = this.configIntegrationDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_EMAIL_ENABLED in this.config)) {\n                        this.config[this.CONFIG_EMAIL_ENABLED] = this.configEmailEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_LINE_ITEM_CONSISTENCY_ENABLED in this.config)) {\n                        this.config[this.CONFIG_LINE_ITEM_CONSISTENCY_ENABLED] = this.configLineItemConsistencyEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED in this.config)) {\n                        this.config[this.CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED] = this.configStorefrontInvoiceDownloadEnabledEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED in this.config)) {\n                        this.config[this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED] = this.configStorefrontWebhooksUpdateEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED in this.config)) {\n                        this.config[this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED] = this.configStorefrontPaymentsUpdateEnabledDefaultValue;\n                    }\n\n                } else {\n\n                    this.applicationKeyFilled = !!this.config[this.CONFIG_APPLICATION_KEY] || !!defaultConfig[this.CONFIG_APPLICATION_KEY];\n                    this.spaceIdFilled = !!this.config[this.CONFIG_SPACE_ID] || !!defaultConfig[this.CONFIG_SPACE_ID];\n                    this.userIdFilled = !!this.config[this.CONFIG_USER_ID] || !!defaultConfig[this.CONFIG_USER_ID];\n\n\n                    if (!(this.CONFIG_INTEGRATION in this.config) || !(this.CONFIG_INTEGRATION in defaultConfig)) {\n                        this.config[this.CONFIG_INTEGRATION] = this.configIntegrationDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_EMAIL_ENABLED in this.config) || !(this.CONFIG_EMAIL_ENABLED in defaultConfig)) {\n                        this.config[this.CONFIG_EMAIL_ENABLED] = this.configEmailEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_LINE_ITEM_CONSISTENCY_ENABLED in this.config) || !(this.CONFIG_LINE_ITEM_CONSISTENCY_ENABLED in defaultConfig)) {\n                        this.config[this.CONFIG_LINE_ITEM_CONSISTENCY_ENABLED] = this.configLineItemConsistencyEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED in this.config) || !(this.CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED in defaultConfig)) {\n                        this.config[this.CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED] = this.configStorefrontInvoiceDownloadEnabledEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED in this.config) || !(this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED in defaultConfig)) {\n                        this.config[this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED] = this.configStorefrontWebhooksUpdateEnabledDefaultValue;\n                    }\n\n                    if (!(this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED in this.config) || !(this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED in defaultConfig)) {\n                        this.config[this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED] = this.configStorefrontPaymentsUpdateEnabledDefaultValue;\n                    }\n                }\n\n                this.$emit('salesChannelChanged');\n                this.$emit('update:value', configData);\n            },\n            deep: true\n        }\n    },\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkNumberFieldInheritance(value) {\n            if (typeof value !== 'number') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n\n        getInheritValue(key) {\n            if (this.selectedSalesChannelId == null ) {\n                return this.actualConfigData[key];\n            } else {\n                return this.allConfigs['null'][key];\n            }\n        },\n\n        onSave() {\n            if (!(this.spaceIdFilled && this.userIdFilled && this.applicationKeyFilled)) {\n                this.setErrorStates();\n                return;\n            }\n            this.save();\n        },\n\n        save() {\n            this.isLoading = true;\n\n            this.$refs.configComponent.save().then((res) => {\n                if (res) {\n                    this.config = res;\n                }\n                this.registerWebHooks();\n                this.synchronizePaymentMethodConfiguration();\n                this.installOrderDeliveryStates();\n            }).catch((e) => {\n                console.error('Error:', e);\n                this.isLoading = false;\n            });\n        },\n\n        registerWebHooks() {\n            if (this.config[this.CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED] === false) {\n                return false;\n            }\n\n            this.PostFinanceCheckoutConfigurationService.registerWebHooks(this.$refs.configComponent.selectedSalesChannelId)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        title: this.$tc('postfinancecheckout-settings.settingForm.titleSuccess'),\n                        message: this.$tc('postfinancecheckout-settings.settingForm.messageWebHookUpdated')\n                    });\n                }).catch((e) => {\n                    this.createNotificationError({\n                        title: this.$tc('postfinancecheckout-settings.settingForm.titleError'),\n                        message: this.$tc('postfinancecheckout-settings.settingForm.messageWebHookError')\n                    });\n                    this.isLoading = false;\n                    console.error('Error:', e);\n            });\n        },\n\n        synchronizePaymentMethodConfiguration() {\n            if (this.config[this.CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED] === false) {\n                return false;\n            }\n\n            this.PostFinanceCheckoutConfigurationService.synchronizePaymentMethodConfiguration(this.$refs.configComponent.selectedSalesChannelId)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        title: this.$tc('postfinancecheckout-settings.settingForm.titleSuccess'),\n                        message: this.$tc('postfinancecheckout-settings.settingForm.messagePaymentMethodConfigurationUpdated')\n                    });\n                    this.isLoading = false;\n                }).catch((e) => {\n                    this.createNotificationError({\n                        title: this.$tc('postfinancecheckout-settings.settingForm.titleError'),\n                        message: this.$tc('postfinancecheckout-settings.settingForm.messagePaymentMethodConfigurationError')\n                    });\n                    this.isLoading = false;\n                    console.error('Error:', e);\n            });\n        },\n\n        installOrderDeliveryStates(){\n            this.PostFinanceCheckoutConfigurationService.installOrderDeliveryStates()\n                .then(() => {\n                    this.createNotificationSuccess({\n                        title: this.$tc('postfinancecheckout-settings.settingForm.titleSuccess'),\n                        message: this.$tc('postfinancecheckout-settings.settingForm.messageOrderDeliveryStateUpdated')\n                    });\n                    this.isLoading = false;\n                }).catch(() => {\n                    this.createNotificationError({\n                        title: this.$tc('postfinancecheckout-settings.settingForm.titleError'),\n                        message: this.$tc('postfinancecheckout-settings.settingForm.messageOrderDeliveryStateError')\n                    });\n                    this.isLoading = false;\n            });\n        },\n\n        onSetPaymentMethodDefault() {\n            this.isSettingDefaultPaymentMethods = true;\n            this.PostFinanceCheckoutConfigurationService.setPostFinanceCheckoutAsSalesChannelPaymentDefault(\n                this.$refs.configComponent.selectedSalesChannelId\n            ).then(() => {\n                this.isSettingDefaultPaymentMethods = false;\n                this.isSetDefaultPaymentSuccessful = true;\n                this.createNotificationSuccess({\n                    title: this.$tc('postfinancecheckout-settings.settingForm.titleSuccess'),\n                    message: this.$tc('postfinancecheckout-settings.salesChannelCard.messageDefaultPaymentUpdated')\n                });\n            });\n        },\n\n        setErrorStates() {\n            const messageNotBlankErrorState = {\n                code: 1,\n                detail: this.$tc('postfinancecheckout-settings.messageNotBlank')\n            };\n\n            if (!this.spaceIdFilled) {\n                this.spaceIdErrorState = messageNotBlankErrorState;\n            }\n\n            if (!this.userIdFilled) {\n                this.userIdErrorState = messageNotBlankErrorState;\n            }\n\n            if (!this.applicationKeyFilled) {\n                this.applicationKeyErrorState = messageNotBlankErrorState;\n            }\n        },\n\n        // Handles the 'check-api-connection-event'.\n        // Uses the provided apiConnectionData to perform API connection checks.\n        onCheckApiConnection(apiConnectionData) {\n            const { spaceId, userId, applicationKey } = apiConnectionData;\n            this.isTesting = true;\n\n            this.PostFinanceCheckoutConfigurationService.checkApiConnection(spaceId, userId, applicationKey)\n                .then((res) => {\n                    if (res.result === 200) {\n                        this.createNotificationSuccess({\n                            title: this.$tc('postfinancecheckout-settings.settingForm.credentials.alert.title'),\n                            message: this.$tc('postfinancecheckout-settings.settingForm.credentials.alert.successMessage')\n                        });\n                    } else {\n                        this.createNotificationError({\n                            title: this.$tc('postfinancecheckout-settings.settingForm.credentials.alert.title'),\n                            message: this.$tc('postfinancecheckout-settings.settingForm.credentials.alert.errorMessage')\n                        });\n                    }\n                    this.isTesting = false;\n                }).catch(() => {\n                    this.createNotificationError({\n                        title: this.$tc('postfinancecheckout-settings.settingForm.credentials.alert.title'),\n                        message: this.$tc('postfinancecheckout-settings.settingForm.credentials.alert.errorMessage')\n                    });\n                    this.isTesting = false;\n            });\n        }\n    }\n});\n","{% block postfinancecheckout_settings_content_card_channel_config_credentials %}\n\t<mt-card\n\t\t\tclass=\"mt-card\"\n\t\t\t:title=\"$tc('postfinancecheckout-settings.settingForm.credentials.cardTitle')\"\n\t\t\tv-if=\"actualConfigData\"\n\t>\n\n\t\t{% block postfinancecheckout_settings_content_card_channel_config_credentials_card_container %}\n\t\t\t<sw-container>\n\n\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_credentials_card_container_settings %}\n\t\t\t\t\t<div v-if=\"actualConfigData\" class=\"postfinancecheckout-settings-credentials-fields\">\n\n\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_credentials_card_container_settings_space_id %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_SPACE_ID]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId === null ? null : allConfigs['null'][CONFIG_SPACE_ID]\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkNumberFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<mt-number-field\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_SPACE_ID\"\n\t\t\t\t\t\t\t\t\t\t\t:required=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('postfinancecheckout-settings.settingForm.credentials.spaceId.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('postfinancecheckout-settings.settingForm.credentials.spaceId.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"props.isInherited || !acl.can('postfinancecheckout.editor')\"\n\t\t\t\t\t\t\t\t\t\t\t:model-value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t:error=\"spaceIdErrorState\"\n\t\t\t\t\t\t\t\t\t\t\t@update:model-value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</mt-number-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_credentials_card_container_settings_user_id %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_USER_ID]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId === null ? null : allConfigs['null'][CONFIG_USER_ID]\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkNumberFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<mt-number-field\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_USER_ID\"\n\t\t\t\t\t\t\t\t\t\t\t:required=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('postfinancecheckout-settings.settingForm.credentials.userId.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('postfinancecheckout-settings.settingForm.credentials.userId.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"props.isInherited || !acl.can('postfinancecheckout.editor')\"\n\t\t\t\t\t\t\t\t\t\t\t:model-value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t:error=\"userIdErrorState\"\n\t\t\t\t\t\t\t\t\t\t\t@update:model-value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</mt-number-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_credentials_card_container_settings_application_key %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_APPLICATION_KEY]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId === null ? null : allConfigs['null'][CONFIG_APPLICATION_KEY]\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkTextFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<mt-password-field\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_APPLICATION_KEY\"\n\t\t\t\t\t\t\t\t\t\t\t:required=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t:passwordToggleAble=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('postfinancecheckout-settings.settingForm.credentials.applicationKey.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('postfinancecheckout-settings.settingForm.credentials.applicationKey.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"props.isInherited || !acl.can('postfinancecheckout.editor')\"\n\t\t\t\t\t\t\t\t\t\t\t:model-value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t:error=\"applicationKeyErrorState\"\n\t\t\t\t\t\t\t\t\t\t\t@update:model-value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</mt-password-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\n\t\t\t\t{% verbatim %}\n\t\t\t\t<sw-container columns=\"1fr 1fr\" gap=\"0px 30px\">\n\t\t\t\t\t<mt-button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t:isLoading=\"isTesting\"\n\t\t\t\t\t\t\t@click=\"emitCheckApiConnectionEvent\">\n\t\t\t\t\t\t{{ $tc('postfinancecheckout-settings.settingForm.credentials.button.label') }}\n\t\t\t\t\t</mt-button>\n\t\t\t\t</sw-container>\n\t\t\t\t{% endverbatim %}\n\n\t\t\t</sw-container>\n\t\t{% endblock %}\n\t</mt-card>\n\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\nimport constants from '../../page/postfinancecheckout-settings/configuration-constants'\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('sw-postfinancecheckout-credentials', {\n    template: template,\n\n    name: 'PostFinanceCheckoutCredentials',\n\n    inject: [\n        'acl'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    props: {\n        actualConfigData: {\n            type: Object,\n            required: true\n        },\n        allConfigs: {\n            type: Object,\n            required: true\n        },\n\n        selectedSalesChannelId: {\n            required: true\n        },\n        spaceIdFilled: {\n            type: Boolean,\n            required: true\n        },\n        spaceIdErrorState: {\n            required: true\n        },\n        userIdFilled: {\n            type: Boolean,\n            required: true\n        },\n        userIdErrorState: {\n            required: true\n        },\n        applicationKeyFilled: {\n            type: Boolean,\n            required: true\n        },\n        applicationKeyErrorState: {\n            required: true\n        },\n        isLoading: {\n            type: Boolean,\n            required: true\n        },\n        isTesting: {\n            type: Boolean,\n            required: false\n        }\n    },\n\n    data() {\n        return {\n            ...constants\n        };\n    },\n\n    methods: {\n\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkNumberFieldInheritance(value) {\n            if (typeof value !== 'number') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n\n        // Emits the 'check-api-connection-event' with the current API connection parameters.\n        // Used to trigger API connection testing from this component.\n        emitCheckApiConnectionEvent() {\n            const apiConnectionParams = {\n                spaceId: this.actualConfigData[constants.CONFIG_SPACE_ID],\n                userId: this.actualConfigData[constants.CONFIG_USER_ID],\n                applicationKey: this.actualConfigData[constants.CONFIG_APPLICATION_KEY]\n            };\n\n            this.$emit('check-api-connection-event', apiConnectionParams);\n        }\n    }\n});\n","{% block postfinancecheckout_settings_content_card_channel_config_options %}\n\t<mt-card class=\"mt-card\"\n\t\t\t :title=\"$tc('postfinancecheckout-settings.settingForm.options.cardTitle')\">\n\n\t\t{% block postfinancecheckout_settings_content_card_channel_config_credentials_card_container %}\n\t\t\t<sw-container>\n\n\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_credentials_card_container_settings %}\n\t\t\t\t\t<div v-if=\"actualConfigData\" class=\"postfinancecheckout-settings-options-fields\">\n\n\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_credentials_card_container_settings_space_view_id %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_SPACE_VIEW_ID]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId === null ? null : allConfigs['null'][CONFIG_SPACE_VIEW_ID]\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkNumberFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<mt-number-field\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_SPACE_VIEW_ID\"\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('postfinancecheckout-settings.settingForm.options.spaceViewId.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('postfinancecheckout-settings.settingForm.options.spaceViewId.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t\t\t\t\t:model-value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t@update:model-value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</mt-number-field>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_credentials_card_container_settings_integration %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_INTEGRATION]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId === null ? null : allConfigs['null'][CONFIG_INTEGRATION]\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkTextFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<sw-single-select\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_INTEGRATION\"\n\t\t\t\t\t\t\t\t\t\t\tlabelProperty=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tvalueProperty=\"id\"\n\t\t\t\t\t\t\t\t\t\t\t:options=\"integrationOptions\"\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('postfinancecheckout-settings.settingForm.options.integration.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('postfinancecheckout-settings.settingForm.options.integration.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t\t\t\t\t:value=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t@update:value=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</sw-single-select>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_credentials_card_container_settings_line_item_consistency_enabled %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_LINE_ITEM_CONSISTENCY_ENABLED]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId == null ? null : allConfigs['null'][CONFIG_LINE_ITEM_CONSISTENCY_ENABLED]\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkBoolFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<mt-switch\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_LINE_ITEM_CONSISTENCY_ENABLED\"\n\t\t\t\t\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('postfinancecheckout-settings.settingForm.options.lineItemConsistencyEnabled.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('postfinancecheckout-settings.settingForm.options.lineItemConsistencyEnabled.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t\t\t\t\t:checked=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t@update:checked=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</mt-switch>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\n\t\t\t\t\t\t{% block postfinancecheckout_settings_content_card_channel_config_credentials_card_container_settings_email_enabled %}\n\t\t\t\t\t\t\t<sw-inherit-wrapper\n\t\t\t\t\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_EMAIL_ENABLED]\"\n\t\t\t\t\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId == null ? null : allConfigs['null'][CONFIG_EMAIL_ENABLED]\"\n\t\t\t\t\t\t\t\t\t:customInheritationCheckFunction=\"checkBoolFieldInheritance\">\n\t\t\t\t\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t\t\t\t\t<mt-switch\n\t\t\t\t\t\t\t\t\t\t\t:name=\"CONFIG_EMAIL_ENABLED\"\n\t\t\t\t\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t\t\t\t\t:label=\"$tc('postfinancecheckout-settings.settingForm.options.emailEnabled.label')\"\n\t\t\t\t\t\t\t\t\t\t\t:helpText=\"$tc('postfinancecheckout-settings.settingForm.options.emailEnabled.tooltipText')\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t\t\t\t\t:checked=\"props.currentValue\"\n\t\t\t\t\t\t\t\t\t\t\t@update:checked=\"props.updateCurrentValue\">\n\t\t\t\t\t\t\t\t\t</mt-switch>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</sw-inherit-wrapper>\n\t\t\t\t\t\t{% endblock %}\n\t\t\t\t\t</div>\n\t\t\t\t{% endblock %}\n\t\t\t</sw-container>\n\t\t{% endblock %}\n\t</mt-card>\n\n{% endblock %}\n","/* global Shopware */\n\nimport template from './index.html.twig';\nimport constants from '../../page/postfinancecheckout-settings/configuration-constants'\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('sw-postfinancecheckout-options', {\n\ttemplate: template,\n\n\tname: 'PostFinanceCheckoutOptions',\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\tactualConfigData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tallConfigs: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tselectedSalesChannelId: {\n\t\t\trequired: true\n\t\t},\n\t\tisLoading: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\t...constants\n\t\t};\n\t},\n\n\tcomputed: {\n\t\tintegrationOptions() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: 'payment_page',\n\t\t\t\t\tname: this.$tc('postfinancecheckout-settings.settingForm.options.integration.options.payment_page')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'iframe',\n\t\t\t\t\tname: this.$tc('postfinancecheckout-settings.settingForm.options.integration.options.iframe')\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t},\n\n\tmethods: {\n\t\tcheckTextFieldInheritance(value) {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckNumberFieldInheritance(value) {\n\t\t\tif (typeof value !== 'number') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckBoolFieldInheritance(value) {\n\t\t\treturn typeof value !== 'boolean';\n\t\t}\n\t}\n});\n","{% block postfinancecheckout_settings_icon %}\n    <span class=\"mt-icon icon--postfinancecheckout-multicolor mt-icon--multicolor\" style=\"width: 16px; height: 16px;\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" contentScriptType=\"text/ecmascript\" width=\"1000px\" zoomAndPan=\"magnify\" contentStyleType=\"text/css\" height=\"1000px\" id=\"svg2\" viewBox=\"0 0 52.529 52.529\" preserveAspectRatio=\"xMidYMid meet\" version=\"1.0\">\n    <defs id=\"defs6\">\n        <clipPath id=\"clipPath18\">\n            <path id=\"path20\" d=\"M0 0h1486.77v420H0z\"/>\n        </clipPath>\n    </defs>\n    <g id=\"layer2\" transform=\"translate(0 .004)\">\n        <path fill=\"#fcd205\" stroke-width=\".066\" d=\"M0 52.525h52.529V-.004H0z\" id=\"path22\"/>\n        <path fill=\"#fff\" stroke-width=\".125\" d=\"M25.456 38.682l1.466-5.891H5.487l-1.468 5.891h21.437\" id=\"path24\"/>\n        <path fill=\"#ed1c24\" stroke-width=\".11\" d=\"M40.818 21.304s1.755-8.045 1.78-8.12H31.445c0 .05-2.306 10.676-2.306 10.727h2.858c.024 0 1.754-8.02 1.754-8.02h5.413s-1.704 8.044-1.754 8.095h8.245l-1.077 4.962H36.38c0 .05-1.653 7.569-1.653 7.569h-6.19c0 .024-.552 2.706-.576 2.731h9.121c0-.025 1.63-7.594 1.63-7.594h8.196c0-.025 2.155-10.3 2.155-10.35h-8.246\" id=\"path26\"/>\n        <path fill=\"#231f20\" stroke-width=\".092\" d=\"M21.249 35.443l1.163-5.396h4.486l.54-2.646h-4.465l.686-3.312h4.713l.581-2.646h-7.786l-2.949 14z\" id=\"path1640\"/>\n        <path fill=\"#231f20\" stroke-width=\".092\" d=\"M10.104 21.303l-2.973 14h3.015l.921-4.272h1.32c4.21 0 6.557-2.061 6.557-5.499 0-2.562-1.823-4.229-4.944-4.229zm2.472 2.564h1.257c1.383 0 2.051.562 2.051 1.875 0 1.687-1.067 2.728-3.035 2.728h-1.257z\" id=\"path1638\"/>\n    </g>\n</svg>\n\n    </span>\n{% endblock %}\n","import template from './index.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('sw-postfinancecheckout-settings-icon', {\n    template\n});\n","<mt-card class=\"mt-card\"\n\t\t :title=\"$tc('postfinancecheckout-settings.settingForm.storefrontOptions.cardTitle')\">\n\t<sw-container>\n\t\t<div v-if=\"actualConfigData\" class=\"postfinancecheckout-settings-storefront-options-fields\">\n\t\t\t<sw-inherit-wrapper\n\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED]\"\n\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId == null ? null : allConfigs['null'][CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED]\"\n\t\t\t\t\t:customInheritationCheckFunction=\"checkBoolFieldInheritance\">\n\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t<mt-switch\n\t\t\t\t\t\t\t:name=\"CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED\"\n\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t:label=\"$tc('postfinancecheckout-settings.settingForm.storefrontOptions.invoiceDownloadEnabled.label')\"\n\t\t\t\t\t\t\t:helpText=\"$tc('postfinancecheckout-settings.settingForm.storefrontOptions.invoiceDownloadEnabled.tooltipText')\"\n\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t:checked=\"props.currentValue\"\n\t\t\t\t\t\t\t@update:checked=\"props.updateCurrentValue\">\n\t\t\t\t\t</mt-switch>\n\t\t\t\t</template>\n\t\t\t</sw-inherit-wrapper>\n\t\t</div>\n\t</sw-container>\n</mt-card>\n\n","/* global Shopware */\n\nimport template from './index.html.twig';\nimport constants from '../../page/postfinancecheckout-settings/configuration-constants'\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('sw-postfinancecheckout-storefront-options', {\n\ttemplate: template,\n\n\tname: 'PostFinanceCheckoutStorefrontOptions',\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\tactualConfigData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tallConfigs: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tselectedSalesChannelId: {\n\t\t\trequired: true\n\t\t},\n\t\tisLoading: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\t...constants\n\t\t};\n\t},\n\n\tmethods: {\n\t\tcheckTextFieldInheritance(value) {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckNumberFieldInheritance(value) {\n\t\t\tif (typeof value !== 'number') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckBoolFieldInheritance(value) {\n\t\t\treturn typeof value !== 'boolean';\n\t\t}\n\t}\n});\n","<mt-card class=\"mt-card\"\n\t\t :title=\"$tc('postfinancecheckout-settings.settingForm.advancedOptions.cardTitle')\">\n\t<sw-container>\n\t\t<div v-if=\"actualConfigData\" class=\"postfinancecheckout-settings-advanced-options-fields\">\n\t\t\t<sw-inherit-wrapper\n\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED]\"\n\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId == null ? null : allConfigs['null'][CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED]\"\n\t\t\t\t\t:customInheritationCheckFunction=\"checkBoolFieldInheritance\">\n\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t<mt-switch\n\t\t\t\t\t\t\t:name=\"CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED\"\n\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t:label=\"$tc('postfinancecheckout-settings.settingForm.advancedOptions.webhooksUpdateEnabled.label')\"\n\t\t\t\t\t\t\t:helpText=\"$tc('postfinancecheckout-settings.settingForm.advancedOptions.webhooksUpdateEnabled.tooltipText')\"\n\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t:checked=\"props.currentValue\"\n\t\t\t\t\t\t\t@update:checked=\"props.updateCurrentValue\">\n\t\t\t\t\t</mt-switch>\n\t\t\t\t</template>\n\t\t\t</sw-inherit-wrapper>\n\n\t\t\t<sw-inherit-wrapper\n\t\t\t\t\tv-model:value=\"actualConfigData[CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED]\"\n\t\t\t\t\t:inheritedValue=\"selectedSalesChannelId == null ? null : allConfigs['null'][CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED]\"\n\t\t\t\t\t:customInheritationCheckFunction=\"checkBoolFieldInheritance\">\n\t\t\t\t<template #content=\"props\">\n\t\t\t\t\t<mt-switch\n\t\t\t\t\t\t\t:name=\"CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED\"\n\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t:mapInheritance=\"props\"\n\t\t\t\t\t\t\t:label=\"$tc('postfinancecheckout-settings.settingForm.advancedOptions.paymentsUpdateEnabled.label')\"\n\t\t\t\t\t\t\t:helpText=\"$tc('postfinancecheckout-settings.settingForm.advancedOptions.paymentsUpdateEnabled.tooltipText')\"\n\t\t\t\t\t\t\t:disabled=\"props.isInherited\"\n\t\t\t\t\t\t\t:checked=\"props.currentValue\"\n\t\t\t\t\t\t\t@update:checked=\"props.updateCurrentValue\">\n\t\t\t\t\t</mt-switch>\n\t\t\t\t</template>\n\t\t\t</sw-inherit-wrapper>\n\t\t</div>\n\t</sw-container>\n</mt-card>\n\n","/* global Shopware */\n\nimport template from './index.html.twig';\nimport constants from '../../page/postfinancecheckout-settings/configuration-constants'\n\nconst {Component, Mixin} = Shopware;\n\nComponent.register('sw-postfinancecheckout-advanced-options', {\n\ttemplate: template,\n\n\tname: 'PostFinanceCheckoutAdvancedOptions',\n\n\tinject: [\n\t\t'acl'\n\t],\n\n\tmixins: [\n\t\tMixin.getByName('notification')\n\t],\n\n\tprops: {\n\t\tactualConfigData: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tallConfigs: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t},\n\t\tselectedSalesChannelId: {\n\t\t\trequired: true\n\t\t},\n\t\tisLoading: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\t...constants\n\t\t};\n\t},\n\n\tmethods: {\n\t\tcheckTextFieldInheritance(value) {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckNumberFieldInheritance(value) {\n\t\t\tif (typeof value !== 'number') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn value.length <= 0;\n\t\t},\n\n\t\tcheckBoolFieldInheritance(value) {\n\t\t\treturn typeof value !== 'boolean';\n\t\t}\n\t}\n});\n","/* global Shopware */\n\nimport './acl';\nimport './page/postfinancecheckout-settings';\nimport './component/sw-postfinancecheckout-credentials';\nimport './component/sw-postfinancecheckout-options';\nimport './component/sw-postfinancecheckout-settings-icon';\nimport './component/sw-postfinancecheckout-storefront-options';\nimport './component/sw-postfinancecheckout-advanced-options';\n\nimport deDE from './snippet/de-DE.json';\nimport enGB from './snippet/en-GB.json';\nimport frFR from './snippet/fr-FR.json';\nimport itIT from './snippet/it-IT.json';\n\nconst {Module} = Shopware;\n\nModule.register('postfinancecheckout-settings', {\n\ttype: 'plugin',\n\tname: 'PostFinanceCheckout',\n\ttitle: 'postfinancecheckout-settings.general.descriptionTextModule',\n\tdescription: 'postfinancecheckout-settings.general.descriptionTextModule',\n\tcolor: '#28d8ff',\n\ticon: 'default-action-settings',\n\tversion: '1.0.1',\n\ttargetVersion: '1.0.1',\n\n    snippets: {\n        'de-DE': deDE,\n        'en-GB': enGB,\n        'fr-FR': frFR,\n        'it-IT': itIT,\n    },\n\n\troutes: {\n\t\tindex: {\n\t\t\tcomponent: 'postfinancecheckout-settings',\n\t\t\tpath: 'index',\n\t\t\tmeta: {\n\t\t\t\tparentPath: 'sw.settings.index',\n\t\t\t\tprivilege: 'postfinancecheckout.viewer'\n\t\t\t},\n\t\t\tprops: {\n                default: (route) => {\n                    return {\n                        hash: route.params.hash,\n                    };\n                },\n            },\n\t\t}\n\t},\n\n\tsettingsItem: {\n\t\tgroup: 'plugins',\n\t\tto: 'postfinancecheckout.settings.index',\n\t\ticonComponent: 'sw-postfinancecheckout-settings-icon',\n\t\tbackgroundEnabled: true,\n\t\tprivilege: 'postfinancecheckout.viewer'\n\t}\n\n});\n","/* global Shopware */\n\nconst ApiService = Shopware.Classes.ApiService;\n\n/**\n * @class PostFinanceCheckoutPayment\\Core\\Api\\Config\\Controller\\ConfigurationController\n */\nclass PostFinanceCheckoutConfigurationService extends ApiService {\n\n\t/**\n\t * PostFinanceCheckoutConfigurationService constructor\n\t *\n\t * @param httpClient\n\t * @param loginService\n\t * @param apiEndpoint\n\t */\n\tconstructor(httpClient, loginService, apiEndpoint = 'postfinancecheckout') {\n\t\tsuper(httpClient, loginService, apiEndpoint);\n\t}\n\n\t/**\n\t * Register web hooks\n\t *\n\t * @param {String|null} salesChannelId\n\t * @return {*}\n\t */\n\tregisterWebHooks(salesChannelId = null) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/configuration/register-web-hooks`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t * Test API connection\n\t *\n\t * @param {int|null} spaceId\n\t * @param {int|null} userId\n\t * @param {String|null} applicationId\n\t * @return {*}\n\t */\n\tcheckApiConnection(spaceId = null, userId = null, applicationId = null) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/configuration/check-api-connection`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tspaceId: spaceId,\n\t\t\t\tuserId: userId,\n\t\t\t\tapplicationId: applicationId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t * Set's the default payment method to PostFinanceCheckout for the given salesChannel id.\n\t *\n\t * @param {String|null} salesChannelId\n\t *\n\t * @returns {Promise}\n\t */\n\tsetPostFinanceCheckoutAsSalesChannelPaymentDefault(salesChannelId = null) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/configuration/set-postfinancecheckout-as-sales-channel-payment-default`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param salesChannelId\n\t * @return {Promise}\n\t */\n\tsynchronizePaymentMethodConfiguration(salesChannelId = null) {\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/configuration/synchronize-payment-method-configuration`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @return {*}\n\t */\n\tinstallOrderDeliveryStates() {\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/configuration/install-order-delivery-states`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n}\n\nexport default PostFinanceCheckoutConfigurationService;\n","/* global Shopware */\n\nconst ApiService = Shopware.Classes.ApiService;\n\n/**\n * @class PostFinanceCheckoutPayment\\Core\\Api\\Transaction\\Controller\\RefundController\n */\nclass PostFinanceCheckoutRefundService extends ApiService {\n\n\t/**\n\t * PostFinanceCheckoutRefundService constructor\n\t *\n\t * @param httpClient\n\t * @param loginService\n\t * @param apiEndpoint\n\t */\n\tconstructor(httpClient, loginService, apiEndpoint = 'postfinancecheckout') {\n\t\tsuper(httpClient, loginService, apiEndpoint);\n\t}\n\n\t/**\n\t * Refund a transaction\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @param {int} quantity\n\t * @param {int} lineItemId\n\t * @return {*}\n\t */\n\tcreateRefund(salesChannelId, transactionId, quantity, lineItemId) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/refund/create-refund/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId,\n\t\t\t\tquantity: quantity,\n\t\t\t\tlineItemId: lineItemId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t * Refund a transaction\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @param {float} refundableAmount\n\t * @return {*}\n\t */\n\tcreateRefundByAmount(salesChannelId, transactionId, refundableAmount) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/refund/create-refund-by-amount/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId,\n\t\t\t\trefundableAmount: refundableAmount\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t * Refund a transaction\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @param {float} refundableAmount\n\t * @param {String} lineItemId\n\t * @return {*}\n\t */\n\tcreatePartialRefund(salesChannelId, transactionId, refundableAmount, lineItemId) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/refund/create-partial-refund/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId,\n\t\t\t\trefundableAmount: refundableAmount,\n\t\t\t\tlineItemId: lineItemId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n}\n\nexport default PostFinanceCheckoutRefundService;\n","/* global Shopware */\n\nconst ApiService = Shopware.Classes.ApiService;\n\n/**\n * @class PostFinanceCheckoutPayment\\Core\\Api\\Transaction\\Controller\\TransactionController\n */\nclass PostFinanceCheckoutTransactionService extends ApiService {\n\n\t/**\n\t * PostFinanceCheckoutTransactionService constructor\n\t *\n\t * @param httpClient\n\t * @param loginService\n\t * @param apiEndpoint\n\t */\n\tconstructor(httpClient, loginService, apiEndpoint = 'postfinancecheckout') {\n\t\tsuper(httpClient, loginService, apiEndpoint);\n\t}\n\n\t/**\n\t * Get transaction data\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @return {*}\n\t */\n\tgetTransactionData(salesChannelId, transactionId) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/transaction/get-transaction-data/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n\n\t/**\n\t * Download Invoice Document\n\t *\n\t * @param context\n\t * @param salesChannelId\n\t * @param transactionId\n\t * @return {string}\n\t */\n\tgetInvoiceDocument(salesChannelId, transactionId) {\n\t\treturn `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/transaction/get-invoice-document/${salesChannelId}/${transactionId}`;\n\t}\n\n\t/**\n\t * Download Packing slip\n\t *\n\t * @param salesChannelId\n\t * @param transactionId\n\t * @return {string}\n\t */\n\tgetPackingSlip(salesChannelId, transactionId) {\n\t\treturn `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/transaction/get-packing-slip/${salesChannelId}/${transactionId}`;\n\t}\n}\n\nexport default PostFinanceCheckoutTransactionService;","/* global Shopware */\n\nconst ApiService = Shopware.Classes.ApiService;\n\n/**\n * @class PostFinanceCheckoutPayment\\Core\\Api\\Transaction\\Controller\\TransactionCompletionController\n */\nclass PostFinanceCheckoutTransactionCompletionService extends ApiService {\n\n\t/**\n\t * PostFinanceCheckoutTransactionCompletionService constructor\n\t *\n\t * @param httpClient\n\t * @param loginService\n\t * @param apiEndpoint\n\t */\n\tconstructor(httpClient, loginService, apiEndpoint = 'postfinancecheckout') {\n\t\tsuper(httpClient, loginService, apiEndpoint);\n\t}\n\n\t/**\n\t * Complete a transaction\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @return {*}\n\t */\n\tcreateTransactionCompletion(salesChannelId, transactionId) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/transaction-completion/create-transaction-completion/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n}\n\nexport default PostFinanceCheckoutTransactionCompletionService;","/* global Shopware */\n\nconst ApiService = Shopware.Classes.ApiService;\n\n/**\n * @class PostFinanceCheckoutPayment\\Core\\Api\\Transaction\\Controller\\TransactionVoidController\n */\nclass PostFinanceCheckoutTransactionVoidService extends ApiService {\n\n\t/**\n\t * PostFinanceCheckoutTransactionVoidService constructor\n\t *\n\t * @param httpClient\n\t * @param loginService\n\t * @param apiEndpoint\n\t */\n\tconstructor(httpClient, loginService, apiEndpoint = 'postfinancecheckout') {\n\t\tsuper(httpClient, loginService, apiEndpoint);\n\t}\n\n\t/**\n\t * Void a transaction\n\t *\n\t * @param {String} salesChannelId\n\t * @param {int} transactionId\n\t * @return {*}\n\t */\n\tcreateTransactionVoid(salesChannelId, transactionId) {\n\n\t\tconst headers = this.getBasicHeaders();\n\t\tconst apiRoute = `${Shopware.Context.api.apiPath}/_action/${this.getApiBasePath()}/transaction-void/create-transaction-void/`;\n\n\t\treturn this.httpClient.post(\n\t\t\tapiRoute,\n\t\t\t{\n\t\t\t\tsalesChannelId: salesChannelId,\n\t\t\t\ttransactionId: transactionId\n\t\t\t},\n\t\t\t{\n\t\t\t\theaders: headers\n\t\t\t}\n\t\t).then((response) => {\n\t\t\treturn ApiService.handleResponse(response);\n\t\t});\n\t}\n}\n\nexport default PostFinanceCheckoutTransactionVoidService;","/* global Shopware */\n\nimport PostFinanceCheckoutConfigurationService from '../core/service/api/postfinancecheckout-configuration.service';\nimport PostFinanceCheckoutRefundService from '../core/service/api/postfinancecheckout-refund.service';\nimport PostFinanceCheckoutTransactionService from '../core/service/api/postfinancecheckout-transaction.service';\nimport PostFinanceCheckoutTransactionCompletionService\n\tfrom '../core/service/api/postfinancecheckout-transaction-completion.service';\nimport PostFinanceCheckoutTransactionVoidService\n\tfrom '../core/service/api/postfinancecheckout-transaction-void.service';\n\n\nconst {Application} = Shopware;\n\n// noinspection JSUnresolvedFunction\nApplication.addServiceProvider('PostFinanceCheckoutConfigurationService', (container) => {\n\tconst initContainer = Application.getContainer('init');\n\treturn new PostFinanceCheckoutConfigurationService(initContainer.httpClient, container.loginService);\n});\n\n// noinspection JSUnresolvedFunction\nApplication.addServiceProvider('PostFinanceCheckoutRefundService', (container) => {\n\tconst initContainer = Application.getContainer('init');\n\treturn new PostFinanceCheckoutRefundService(initContainer.httpClient, container.loginService);\n});\n\n// noinspection JSUnresolvedFunction\nApplication.addServiceProvider('PostFinanceCheckoutTransactionService', (container) => {\n\tconst initContainer = Application.getContainer('init');\n\treturn new PostFinanceCheckoutTransactionService(initContainer.httpClient, container.loginService);\n});\n\n// noinspection JSUnresolvedFunction\nApplication.addServiceProvider('PostFinanceCheckoutTransactionCompletionService', (container) => {\n\tconst initContainer = Application.getContainer('init');\n\treturn new PostFinanceCheckoutTransactionCompletionService(initContainer.httpClient, container.loginService);\n});\n\n// noinspection JSUnresolvedFunction\nApplication.addServiceProvider('PostFinanceCheckoutTransactionVoidService', (container) => {\n\tconst initContainer = Application.getContainer('init');\n\treturn new PostFinanceCheckoutTransactionVoidService(initContainer.httpClient, container.loginService);\n});"],"names":["template$c","Component","Context","Criteria","postfinancecheckoutFormattedHandlerIdentifier","template","orderRepository","orderCriteria","order","paymentMethodId","paymentMethod","template$b","Mixin","Filter","Utils","errorResponse","template$a","template$9","itemUniqueId","newValue","template$8","errorTitle","errorMessage","template$7","template$6","totalAmountTemp","refundsAmountTemp","postfinancecheckoutTransactionId","PostFinanceCheckoutTransaction","refund","reduction","lineItem","modalType","lineItemId","refundableQuantity","itemRefundableAmount","item","selection","refundPromises","error","resolve","reject","Module","deDE","enGB","frFR","itIT","next","currentRoute","template$5","CONFIG_DOMAIN","CONFIG_APPLICATION_KEY","CONFIG_EMAIL_ENABLED","CONFIG_INTEGRATION","CONFIG_LINE_ITEM_CONSISTENCY_ENABLED","CONFIG_SPACE_ID","CONFIG_SPACE_VIEW_ID","CONFIG_STOREFRONT_INVOICE_DOWNLOAD_ENABLED","CONFIG_USER_ID","CONFIG_STOREFRONT_WEBHOOKS_UPDATE_ENABLED","CONFIG_STOREFRONT_PAYMENTS_UPDATE_ENABLED","constants","configData","defaultConfig","value","key","res","messageNotBlankErrorState","apiConnectionData","spaceId","userId","applicationKey","template$4","apiConnectionParams","template$3","template$2","template$1","route","ApiService","PostFinanceCheckoutConfigurationService","httpClient","loginService","apiEndpoint","salesChannelId","headers","apiRoute","response","applicationId","PostFinanceCheckoutRefundService","transactionId","quantity","refundableAmount","PostFinanceCheckoutTransactionService","PostFinanceCheckoutTransactionCompletionService","PostFinanceCheckoutTransactionVoidService","Application","container","initContainer"],"mappings":"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"}